-- MySQL Script generated by MySQL Workbench
-- Sun Apr 10 12:47:26 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema TaskForce
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema TaskForce
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `TaskForce` DEFAULT CHARACTER SET utf8 ;
USE `TaskForce` ;

-- -----------------------------------------------------
-- Table `TaskForce`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`category` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(128) NOT NULL,
  `code` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskForce`.`city`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`city` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(128) NOT NULL,
  `code` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskForce`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `category_id` INT NOT NULL,
  `city_id` INT NOT NULL,
  `name` VARCHAR(128) NOT NULL,
  `email` VARCHAR(128) NOT NULL,
  `password` VARCHAR(128) NOT NULL,
  `role` VARCHAR(8) NULL,
  `birthday` DATE NULL,
  `telephone_number` VARCHAR(64) NULL,
  `telegram` VARCHAR(128) NULL,
  `user_information` VARCHAR(1024) NULL,
  `avatar` VARCHAR(512) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_category1_idx` (`category_id` ASC) VISIBLE,
  INDEX `fk_user_city1_idx` (`city_id` ASC) VISIBLE,
  CONSTRAINT `fk_user_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `TaskForce`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_user_city1`
    FOREIGN KEY (`city_id`)
    REFERENCES `TaskForce`.`city` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskForce`.`customer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`customer` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `registration_date` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_customer_user1_idx` (`user_id` ASC) VISIBLE,
  CONSTRAINT `fk_customer_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `TaskForce`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskForce`.`status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`status` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(128) NOT NULL,
  `code` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskForce`.`executor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`executor` (
  `id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `status_id` INT NOT NULL,
  `done_orders` INT NOT NULL,
  `failed_orders` INT NOT NULL,
  `place_rank` INT NOT NULL,
  `registration_date` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_executor_user1_idx` (`user_id` ASC) VISIBLE,
  INDEX `fk_executor_status1_idx` (`status_id` ASC) VISIBLE,
  CONSTRAINT `fk_executor_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `TaskForce`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_executor_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `TaskForce`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskForce`.`action`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`action` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(128) NOT NULL,
  `code` VARCHAR(128) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskForce`.`task`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`task` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `category_id` INT NOT NULL,
  `city_id` INT NULL,
  `coordinates` VARCHAR(128) NULL,
  `customer_id` INT NOT NULL,
  `executor_id` INT NOT NULL,
  `status_id` INT NOT NULL,
  `action_id` INT NOT NULL,
  `essence` VARCHAR(128) NOT NULL,
  `details` VARCHAR(512) NOT NULL,
  `budget` INT NULL,
  `date_creation` DATETIME NOT NULL,
  `period_execution` DATE NOT NULL,
  `files` VARCHAR(512) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_task_category1_idx` (`category_id` ASC) VISIBLE,
  INDEX `fk_task_city1_idx` (`city_id` ASC) VISIBLE,
  INDEX `fk_task_customer1_idx` (`customer_id` ASC) VISIBLE,
  INDEX `fk_task_executor1_idx` (`executor_id` ASC) VISIBLE,
  INDEX `fk_task_status1_idx` (`status_id` ASC) VISIBLE,
  INDEX `fk_task_action1_idx` (`action_id` ASC) VISIBLE,
  CONSTRAINT `fk_task_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `TaskForce`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_city1`
    FOREIGN KEY (`city_id`)
    REFERENCES `TaskForce`.`city` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `TaskForce`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_executor1`
    FOREIGN KEY (`executor_id`)
    REFERENCES `TaskForce`.`executor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_status1`
    FOREIGN KEY (`status_id`)
    REFERENCES `TaskForce`.`status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_task_action1`
    FOREIGN KEY (`action_id`)
    REFERENCES `TaskForce`.`action` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `TaskForce`.`reviews`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `TaskForce`.`reviews` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `task_id` INT NOT NULL,
  `executor_id` INT NOT NULL,
  `customer_id` INT NOT NULL,
  `date_creation` DATETIME NOT NULL,
  `rating` DECIMAL(1,0) NULL,
  `comment` VARCHAR(512) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_reviews_task1_idx` (`task_id` ASC) VISIBLE,
  INDEX `fk_reviews_executor1_idx` (`executor_id` ASC) VISIBLE,
  INDEX `fk_reviews_customer1_idx` (`customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_reviews_task1`
    FOREIGN KEY (`task_id`)
    REFERENCES `TaskForce`.`task` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reviews_executor1`
    FOREIGN KEY (`executor_id`)
    REFERENCES `TaskForce`.`executor` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_reviews_customer1`
    FOREIGN KEY (`customer_id`)
    REFERENCES `TaskForce`.`customer` (`id`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
